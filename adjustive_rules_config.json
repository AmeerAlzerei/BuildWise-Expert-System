{
  "damage": [
      {
        "condition": "inputs_dict['num_adj_buildings'] >= 1 and self.simulation.output['damage_level'] >= 1",
        "actions": [
          "self.simulation.output['damage_level'] *= 1.15",
          "self.simulation.output['damage_level'] = min(self.simulation.output['damage_level'], 3)"
        ]
      },
      {
        "condition": "0.6 <= inputs_dict['env_impact'] < 0.8",
        "actions": [
          "self.simulation.output['damage_level'] = 1 if self.simulation.output['damage_level'] == 0 else self.simulation.output['damage_level']",
          "self.simulation.output['damage_level'] = 2 if self.simulation.output['damage_level'] == 1 else self.simulation.output['damage_level']",
          "self.simulation.output['damage_level'] = 3 if self.simulation.output['damage_level'] == 2 else self.simulation.output['damage_level']"
        ]
      },
      {
        "condition": "inputs_dict['env_impact'] >= 0.8",
        "actions": [
          "self.simulation.output['damage_level'] = 2 if self.simulation.output['damage_level'] == 0 else self.simulation.output['damage_level']",
          "self.simulation.output['damage_level'] = 3 if self.simulation.output['damage_level'] == 1 else self.simulation.output['damage_level']"
        ]
      }
    ],
  "priority": [
      {
        "condition": "inputs_dict['prob_inaccessibility'] >= 0.6 and self.simulation.output['priority_level'] == 3",
        "actions": [
          "self.simulation.output['priority_level'] = 2"
        ]
      },
      {
        "condition": "inputs_dict['prob_inaccessibility'] >= 0.6 and self.simulation.output['priority_level'] == 2",
        "actions": [
          "self.simulation.output['priority_level'] = 1"
        ]
      },
      {
        "condition": "inputs_dict['prob_UXO'] >= 0.7 and inputs_dict['building_type'] != 2",
        "actions": [
          "self.simulation.output['priority_level'] = max(self.simulation.output['priority_level'] - 1, 1)"
        ]
      },
      {
        "condition": "inputs_dict['time_since_damage'] <= 1 and inputs_dict['building_type'] == 2",
        "actions": [
          "self.simulation.output['priority_level'] *= 1.15",
          "self.simulation.output['priority_level'] = min(self.simulation.output['priority_level'], 3)"
        ]
      },
      {
        "condition": "0.5 <= inputs_dict['hazard_probability'] < 0.7",
        "actions": [
          "self.simulation.output['priority_level'] = min(self.simulation.output['priority_level'] + 1, 3)",
          "self.simulation.output['resource_allocation'] = min(self.simulation.output['resource_allocation'] + 20, 100)"
        ]
      },
      {
        "condition": "inputs_dict['hazard_probability'] >= 0.7",
        "actions": [
          "self.simulation.output['priority_level'] = 3",
          "self.simulation.output['resource_allocation'] = 100"
        ]
      }
    ],
  "risk": [
      {
        "condition": "inputs_dict['safe_zone_distance'] >= 100",
        "actions": [
          "self.simulation.output['risk_level'] *= 0.9",
          "self.simulation.output['risk_level'] = max(self.simulation.output['risk_level'], 0)"
        ]
      }
    ]
}
